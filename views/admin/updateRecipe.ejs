<section id="updateRecipeModal">
  <h1 class="p-3">Update recipe (<%= recipe.name %>)</h1>
  <form action="/recipes/update/<%=recipe.id%>" method="post" enctype="multipart/form-data" class="p-3">
    <div class="mb-3">
      <label for="recipeName" class="form-label">Recipe Name</label>
      <input
        type="text"
        class="form-control"
        id="recipeName"
        name="name"
        value="<%=recipe.name%>"
        required
      />
    </div>
    <div class="mb-3">
      <label for="recipeDescription" class="form-label"
        >Description</label
      >
      <input
        class="form-control"
        id="recipeDescription"
        name="description"
        value="<%=recipe.description%>"
      >
    </div>

    <div class="mb-3 ingredientsContainer">
      <label for="updateRecipeIngredients" class="form-label">Ingredients</label>
      <% recipe.ingredients.forEach((ingredient) => { %>
        <div class="row mb-3 ingredientObject">
          <div class="col position-relative">
            <div class="search-select-box">
              <select name="ingredient" class="w-100 form-control" data-live-search="true">
                <% ingredients.forEach(ing => { %>
                  <option value="<%= ing.name %>" <%= (ing.name === ingredient.ingredient.name) ? 'selected' : '' %>><%= ing.name %></option>
                <% }) %> 
              </select>
            </div>
          </div>
          <div class="col">
            <input type="text" name="quantity" class="form-control" value="<%= ingredient.quantity %>" placeholder="Quantity" aria-label="Quantity"/>
          </div>
          <div class="col-1 fs-4 remove-ingredient" style="cursor: pointer; display: none" onclick="removeIngredient(this)">
            <i class="ri-close-line" aria-label="Remove ingredient"></i>
          </div>
        </div>
      <% }) %>
      <div class="row mb-3">
        <div class="col px-3 add-ingredient" style="cursor: pointer; color: blue" onclick="addIngredient('updateRecipeModal')">+ Add ingredient</div>
        <div class="col">
          <a href="/ingredientManagement">Can't find your ingredient? Create new here.</a>
        </div>
      </div>
    </div>
    
    <div class="mb-3">
      <label for="updateRecipeCuisine" class="form-label">Cuisine</label>
      <select class="form-select" id="updateRecipeCuisine" name="cuisine">
        <% cuisines.forEach(function(cuisine) { %>
        <option value="<%= cuisine._id%>"><%= cuisine.name %></option>
        <% }) %>
      </select>
    </div>
    <div class="mb-3">
      <label for="newImage" class="form-label">Image</label>
      <input
        type="file"
        class="form-control"
        id="newImage"
        name="newImage"
      />
    </div>
    <div class="mb-3">
      <label for="recipeTime" class="form-label">Time</label>
      <input
        type="text"
        class="form-control"
        id="recipeTime"
        name="time"
        value="<%=recipe.time%>"

      />
    </div>
    <div class="mb-3">
      <label for="recipeUrl" class="form-label">URL</label>
      <input
        type="text"
        class="form-control"
        id="recipeUrl"
        name="url"
        value="<%=recipe.url%>"

      />
    </div>

    <button type="submit" class="btn btn-success">Update</button>

    <button type="button" class="btn btn-secondary ">
      <a href="/recipes" class="text-light  px-2 py-2">Back</a>
    </button>
  </form> 
</section>
  <script>
      function addIngredient(modalId) {
// Check if the modal element exists in the DOM
const modal = document.getElementById(modalId);
if (!modal) {
    console.error('Modal element not found');
    return;
}

// Find the ingredients container within the modal
const ingredientsContainer = modal.querySelector('.ingredientsContainer');
if (!ingredientsContainer) {
    console.error('Ingredients container not found within the modal');
    return;
}

// Create a new row for the ingredient
const newRow = document.createElement('div');
newRow.classList.add('row', 'mb-3', 'ingredientObject');
newRow.innerHTML = `
  <div class="col position-relative">
    <div class="search-select-box">
      <select name="ingredient[]" class="w-100 form-control" data-live-search="true">
        <% ingredients.forEach(ingredient => { %>
          <option name="<%= ingredient.name %>" value="<%= ingredient.name %>" data-tokens="<%= ingredient.name %>"><%= ingredient.name %></option>
        <% }) %> 
      </select>
    </div>
  </div>
  <div class="col">
    <input type="text" name="quantity[]" class="form-control" placeholder="Quantity" aria-label="Quantity"/>
  </div>
  <div class="col-1 fs-4 remove-ingredient" style="cursor: pointer; display: none" onclick="removeIngredient(this)">
    <i class="ri-close-line" aria-label="Remove ingredient"></i>
  </div>
`;

// Insert the new row before the "Add ingredient" button
const addNewIngredientButton = ingredientsContainer.querySelector('.add-ingredient');
if (!addNewIngredientButton) {
    console.error('Add ingredient button not found');
    return;
}
ingredientsContainer.insertBefore(newRow, addNewIngredientButton.parentElement);

// Re-initialize Bootstrap-select plugin
$('.search-select-box select').selectpicker();

// Show or hide remove ingredient buttons based on the number of ingredients
const removeIngredients = modal.querySelectorAll('.remove-ingredient');
if (removeIngredients.length > 1) {
    removeIngredients.forEach((element) => {
        element.style.display = 'block';
    });
} else {
    removeIngredients[0].style.display = 'none';
}

console.log('Modal ID:', modalId);
console.log('Modal Element:', modal);
console.log('Ingredients Container:', ingredientsContainer);
}


function removeIngredient(element) {
const row = element.closest('.row');
row.parentNode.removeChild(row);

const removeIngredients = document.querySelectorAll('.remove-ingredient');
if (removeIngredients.length <= 1) {
  removeIngredients.forEach((element) => {
    element.style.display = 'none';
  });
}
}
  </script>